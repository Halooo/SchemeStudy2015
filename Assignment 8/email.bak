;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname email) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #t)))
;;
;; ***************************************************
;; Hao Sun(20611135)
;; CS 135 Fall 2015
;; Assignment 08, Problem 1
;; ***************************************************
;;

(define-struct email-record (day-id hours-worked emails-sent))
;; An Email-Record is a (make-email-record Nat Num Nat)
;; requires: hours-worked >= 0
(define-struct daily-stats (staff-id staff-name emails))
;; A Daily-Stats is a (make-daily-stats Nat Str (listof Email-Record))
;; requires: each day-id in emails is unique
(define stats1 (list (make-email-record 1 7 20) (make-email-record 2 8 50)
                     (make-email-record 3 6 30) (make-email-record 4 8 100)
                     (make-email-record 5 7 50)))
(define em1 (make-daily-stats 1 "Justin" empty))
(define em2 (make-daily-stats 2 "Tolu" stats1))

(define (avg-emails ds)
  (local [(define (ttl-email loes)
            (cond [(empty? loes) 0]
                  [else (+ (email-record-emails-sent
                            (first loes))
                           (ttl-email (rest loes)))]))
          (define (ttl-hr loes)
            (cond [(empty? loes) 0]
                  [else (+ (email-record-hours-worked
                            (first loes))
                           (ttl-hr (rest loes)))]))]
    (cond [(empty? (daily-stats-emails ds)) 0]
          [else (/ (ttl-email (daily-stats-emails ds))
                   (ttl-hr (daily-stats-emails ds)))])))
(check-expect (avg-emails em1) 0)
(check-expect (avg-emails em2) 250/36)


